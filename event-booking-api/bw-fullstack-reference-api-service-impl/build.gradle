dependencies {
    implementation(project(":${rootProject.name}-service"))
    implementation(project(":${rootProject.name}-domain"))
    implementation(project(":${rootProject.name}-dao")) {
        exclude module: "hibernate-jpa-2.1-api" ///TODO ????
        exclude module: "spring-beans" ///TODO ????
        exclude module: "spring-tx" ///TODO ????
    }

    testImplementation(project(":${rootProject.name}-test-starter"))
    testImplementation(project(":${rootProject.name}-infrastructure"))
    testImplementation(project(":${rootProject.name}-integration-impl"))

    implementation "com.bw.commons:bw-starter:$bwcommonsVersion"
    implementation "com.bw.commons:bw-auth-client:$bwcommonsVersion"

    testImplementation "com.bw.commons:bw-auth-client:$bwcommonsVersion"

    implementation group: 'org.springframework', name: 'spring-beans', version: "$springVersion"
    implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: "$springDataVersion"
    implementation group: 'com.googlecode.libphonenumber', name: 'libphonenumber', version: "$libphonenumberVersion"
    /// TODO ???? Why can't all jpa be in dao (repositories?) implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: "$springDataVersion"
    implementation "javax.transaction:javax.transaction-api:$javaxTransactionApiVersion"
    implementation group: 'com.querydsl', name: 'querydsl-jpa', version: "$queryDslVersion"
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: "$okhttpVersion"
    compile group: 'org.keycloak', name: 'keycloak-admin-client', version: "$keycloakVersion"
    compile group: 'org.keycloak', name: 'keycloak-spring-boot-starter', version: "$keycloakVersion"
    compile group: 'org.keycloak', name: 'keycloak-authz-client', version: "$keycloakVersion"

}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                minimum = 0.90
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification
